@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --deep-space-1: #011627;
  --deep-space-2: #010f1b;
  --light-blue: 184, 243, 255;
  --violet: 168, 130, 221;
  --turquioise: 100, 220, 255;
  --crayon-red: 232, 49, 81;
  --vanilla: 248, 244, 166;
  --mindaro: 219, 254, 135;
  --circle-size: 80%;
  --blending: hard-light;
}

*,
*::before,
*::after {
  @apply m-0 p-0 box-border;
}

@layer base {
  html {
    font-size: 62.5%;
  }

  body {
    @apply text-16 text-gray-900 leading dark:text-white;
  }
}

@layer components {
  #MeshGradient {
    @apply fixed top-0 left-0 w-screen h-screen overflow-hidden dark:bg-gradient-to-br dark:from-deep-space-1 dark:to-deep-space-2 -z-10;
  }

  #MeshGradient-meshContainer {
    @apply w-full h-full;

    filter: url(#goo) blur(40px);
  }

  #MeshGradient-meshContainer-mesh1 {
    position: fixed;
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);

    width: var(--circle-size);
    height: var(--circle-size);
    opacity: 1;
    background: radial-gradient(circle at center, rgba(var(--light-blue), 0.8) 0, rgba(var(--light-blue), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    transform-origin: center center;
    animation: moveVertically 30s ease infinite;
  }

  #MeshGradient-meshContainer-mesh2 {
    position: fixed;
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);

    width: var(--circle-size);
    height: var(--circle-size);
    opacity: 1;
    background: radial-gradient(circle at center, rgba(var(--violet), 0.8) 0, rgba(var(--violet), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    transform-origin: calc(50% - 400px);
    animation: moveInCircle 20s reverse infinite;
  }

  #MeshGradient-meshContainer-mesh3 {
    position: fixed;
    top: calc(50% - var(--circle-size) / 2 + 200px);
    left: calc(50% - var(--circle-size) / 2 - 500px);

    width: var(--circle-size);
    height: var(--circle-size);
    opacity: 1;
    background: radial-gradient(circle at center, rgba(var(--turquioise), 0.8) 0, rgba(var(--turquioise), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    transform-origin: calc(50% + 400px);
    animation: moveInCircle 40s linear infinite;
  }

  #MeshGradient-meshContainer-mesh4 {
    position: fixed;
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);

    width: var(--circle-size);
    height: var(--circle-size);
    opacity: 1;
    background: radial-gradient(circle at center, rgba(var(--crayon-red), 0.8) 0, rgba(var(--crayon-red), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    transform-origin: calc(50% - 200px);
    animation: moveHorizontally 40s ease infinite;
  }

  #MeshGradient-meshContainer-mesh5 {
    position: fixed;
    top: calc(50% - var(--circle-size));
    left: calc(50% - var(--circle-size));

    width: calc(var(--circle-size) * 2);
    height: calc(var(--circle-size) * 2);
    opacity: 1;
    background: radial-gradient(circle at center, rgba(var(--vanilla), 0.8) 0, rgba(var(--vanilla), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    transform-origin: calc(50% - 800px) calc(50% + 200px);
    animation: moveInCircle 20s ease infinite;
  }

  #MeshGradient-meshContainer-interactive {
    @apply fixed -top-1/2 -left-1/2 w-full h-full opacity-70 mix-blend-hard-light;

    background: radial-gradient(circle at center, rgba(var(--mindaro), 0.8) 0, rgba(var(--mindaro), 0) 50%) no-repeat;
  }

  .MeshGradient-goo {
    @apply fixed top-0 left-0 w-0 h-0;
  }
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertically {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontally {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(-10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}